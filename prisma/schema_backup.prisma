// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Consultation {
  id                String   @id @default(cuid())
  sourceId          String   @unique @map("source_id")
  consultingContent String   @map("consulting_content")
  consultingDate    String   @map("consulting_date")
  consultingTime    String   @map("consulting_time")
  consultingTurns   String   @map("consulting_turns")
  consultingLength  Int      @map("consulting_length")
  sessionId         String   @map("session_id")
  startTime         DateTime @map("start_time")
  endTime           DateTime @map("end_time")
  duration          String
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @updatedAt @map("updated_at")
  
  messages          ConsultationMessage[]

  @@map("consultations")
}

model ConsultationMessage {
  id             String       @id @default(cuid())
  consultationId String       @map("consultation_id")
  messageId      String       @map("message_id")
  role           String       // 'user' or 'assistant'
  content        String
  timestamp      DateTime
  agent          String?
  createdAt      DateTime     @default(now()) @map("created_at")
  
  consultation   Consultation @relation(fields: [consultationId], references: [id], onDelete: Cascade)

  @@map("consultation_messages")
}
